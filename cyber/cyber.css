@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&display=swap');
    
:root {
  --neon-purple: #b829f5;
  --neon-blue: #2fe0ff;
  --neon-pink: #ff2cf2;
  --dark-bg: #0c0c14;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Orbitron', sans-serif;
}

body {
  background-color: var(--dark-bg);
  color: white;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  overflow-x: hidden; /* Menyembunyikan scroll horizontal */
}

/* Grid background */
body::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    linear-gradient(90deg, rgba(255,255,255,0.05) 1px, transparent 1px),
    linear-gradient(0deg, rgba(255,255,255,0.05) 1px, transparent 1px);
  background-size: 30px 30px;
  z-index: -1;
  perspective: 300px;
  transform-style: preserve-3d;
  transform: rotateX(45deg);
}

.container {
  width: 400px;
  padding: 30px;
  border: 1px solid var(--neon-blue);
  box-shadow: 0 0 15px var(--neon-blue), 0 0 30px rgba(47, 224, 255, 0.3);
  animation: pulse 4s ease-in-out infinite;
  position: relative;
  z-index: 10;
  backdrop-filter: blur(5px);
  background-color: rgba(12, 12, 20, 0.8);
  border-radius: 30px;
}

h1 {
  text-align: center;
  margin-bottom: 30px;
  color: var(--neon-pink);
  text-shadow: 0 0 10px var(--neon-pink);
  letter-spacing: 2px;
}

.form-group {
  margin-bottom: 20px;
  position: relative;
}

label {
  display: block;
  margin-bottom: 8px;
  color: var(--neon-blue);
  text-shadow: 0 0 5px var(--neon-blue);
  letter-spacing: 1px;
}

input, textarea {
  width: 100%;
  padding: 12px;
  background-color: rgba(0, 0, 0, 0.5);
  border: 1px solid var(--neon-purple);
  color: white;
  outline: none;
  transition: all 0.3s ease;
}

input:focus, textarea:focus {
  border-color: var(--neon-pink);
  box-shadow: 0 0 10px var(--neon-pink);
}

/* Glitch effect on hover */
input:hover, textarea:hover {
  animation: glitch 0.3s ease-in-out infinite;
}

@keyframes glitch {
  0% {
    transform: translate(0);
  }
  20% {
    transform: translate(-2px, 2px);
    box-shadow: 0 0 10px var(--neon-blue);
  }
  40% {
    transform: translate(-2px, -2px);
    box-shadow: 0 0 10px var(--neon-purple);
  }
  60% {
    transform: translate(2px, 2px);
    box-shadow: 0 0 10px var(--neon-pink);
  }
  80% {
    transform: translate(2px, -2px);
    box-shadow: 0 0 10px var(--neon-blue);
  }
  100% {
    transform: translate(0);
  }
}

/* Pulsing shadow animation */
@keyframes pulse {
  0% {
    box-shadow: 0 0 15px var(--neon-blue), 0 0 30px rgba(47, 224, 255, 0.3);
  }
  50% {
    box-shadow: 0 0 25px var(--neon-blue), 0 0 50px rgba(47, 224, 255, 0.5);
  }
  100% {
    box-shadow: 0 0 15px var(--neon-blue), 0 0 30px rgba(47, 224, 255, 0.3);
  }
}

/* TV static error effect */
.error-field {
  position: relative;
  z-index: 1;
}

.error-field::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 150 150' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3CfeColorMatrix type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  opacity: 0.3;
  z-index: -1;
  pointer-events: none;
  animation: staticEffect 0.2s steps(2) infinite;
}

@keyframes staticEffect {
  0% {
    opacity: 0.3;
    transform: scale(1);
  }
  50% {
    opacity: 0.4;
    transform: scale(1.01);
  }
  100% {
    opacity: 0.3;
    transform: scale(1);
  }
}

.error-message {
  color: var(--neon-pink);
  font-size: 12px;
  margin-top: 5px;
  text-shadow: 0 0 5px var(--neon-pink);
  animation: glitch 1s ease-in-out infinite;
}

button {
  width: 100%;
  padding: 15px;
  background-color: transparent;
  border: 2px solid var(--neon-purple);
  color: var(--neon-purple);
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 2px;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
  text-shadow: 0 0 5px var(--neon-purple);
}

button:hover {
  background-color: rgba(184, 41, 245, 0.2);
  box-shadow: 0 0 15px var(--neon-purple);
}

/* Electric button effect */
button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
  transition: all 0.4s ease;
}

button:hover::before {
  left: 100%;
}

.btn-electric {
  position: relative;
}

.electric-effect {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle, var(--neon-purple) 0%, transparent 70%);
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}

/* Added sparkles for electric effect */
.sparkle {
  position: absolute;
  width: 4px;
  height: 4px;
  background-color: white;
  border-radius: 50%;
  opacity: 0;
  z-index: 10;
  pointer-events: none;
  box-shadow: 0 0 10px 2px var(--neon-blue);
}
